name: ðŸš€ Deploy website on push to CPanel
on:
  push:
    branches:
      - main
jobs:
  FTP-Deploy-Action:
    name: FTP-Deploy-Action
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: ðŸšš Get latest code
        uses: actions/checkout@v4

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.4
          tools: composer:v2
          coverage: xdebug

      - name: Install Dependencies
        run: composer install --no-interaction --prefer-dist --optimize-autoloader

      - name: Copy Environment File
        run: cp .env.example .env

      - name: Generate Application Key
        run: php artisan key:generate

      - name: Directory Permissions
        run: |
          chmod -R 775 storage
          chmod -R 775 bootstrap/cache
          find storage -type f -exec chmod 664 {} \;
          find bootstrap/cache -type f -exec chmod 664 {} \;

      - name: Create Database Directory
        run: mkdir -p database

      - name: Create SQLite Database
        run: touch database/database.sqlite

      - name: Replace .env values for build
        run: |
          sed -i "/^#\? *APP_ENV=/c\APP_ENV=production" .env
          sed -i "/^#\? *APP_DEBUG=/c\APP_DEBUG=false" .env
          sed -i "/^#\? *CACHE_STORE=/c\CACHE_STORE=file" .env
          sed -i "/^#\? *SESSION_DRIVER=/c\SESSION_DRIVER=file" .env

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "22"
          cache: "npm"

      - name: Install Node Dependencies
        run: npm ci

      - name: Clear Laravel Cache (safe)
        run: |
          php artisan config:clear
          php artisan route:clear
          php artisan view:clear

      - name: Setup Database
        run: php artisan migrate --env=production --no-interaction --force

      - name: Build Assets
        run: |
          echo "Building assets with Vite..."
          npm run build
          echo "Build completed successfully"

      - name: Verify Build Artifacts
        run: |
          echo "Checking if build artifacts exist..."
          ls -la public/build/
          echo "Build artifacts verified"

      - name: Clear Caches
        run: php artisan optimize:clear

      - name: Storage link
        run: php artisan storage:link

      - name: Replace .env values in-place
        run: |
          sed -i "/^#\? *APP_ENV=/c\APP_ENV=production" .env
          sed -i "/^#\? *APP_DEBUG=/c\APP_DEBUG=true" .env
          sed -i "/^#\? *APP_URL=/c\APP_URL=${{ secrets.APP_URL }}" .env
          sed -i "/^#\? *LOG_LEVEL=/c\LOG_LEVEL=debug" .env

          sed -i "s/^DB_CONNECTION=.*/DB_CONNECTION=${{ secrets.DB_CONNECTION }}/" .env
          sed -i "s/^# DB_HOST=.*/DB_HOST=${{ secrets.DB_HOST }}/" .env
          sed -i "s/^# DB_PORT=.*/DB_PORT=${{ secrets.DB_PORT }}/" .env
          sed -i "s/^# DB_DATABASE=.*/DB_DATABASE=${{ secrets.DB_DATABASE }}/" .env
          sed -i "s/^# DB_USERNAME=.*/DB_USERNAME=${{ secrets.DB_USERNAME }}/" .env
          sed -i "s/^# DB_PASSWORD=.*/DB_PASSWORD=${{ secrets.DB_PASSWORD }}/" .env

          sed -i "/^#\? *CACHE_STORE=/c\CACHE_STORE=file" .env
          sed -i "/^#\? *SESSION_DRIVER=/c\SESSION_DRIVER=file" .env
          sed -i "/^#\? *QUEUE_CONNECTION=/c\QUEUE_CONNECTION=sync" .env

      - name: Create error log file
        run: touch storage/logs/laravel.log

      - name: Create debug info file
        run: |
          echo "Laravel Application Debug Info" > debug-info.txt
          echo "Generated: $(date)" >> debug-info.txt
          echo "PHP Version: $(php -v | head -1)" >> debug-info.txt
          echo "Laravel Version: $(php artisan --version)" >> debug-info.txt
          echo "" >> debug-info.txt
          echo "Environment Configuration:" >> debug-info.txt
          grep -E "(APP_|DB_|CACHE_|SESSION_)" .env >> debug-info.txt

      - name: Final permissions and cleanup
        run: |
          chmod 644 .env
          chmod 644 debug.php
          chmod 755 public/index.php
          find public -name "*.php" -exec chmod 644 {} \;
          find public -type d -exec chmod 755 {} \;

      - name: Copy Environment File
        run: cp .env .env.production

      - name: ðŸ“‚ Sync files
        uses: SamKirkland/FTP-Deploy-Action@v4.3.5
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          server-dir: /
          exclude: |
            package-lock.json
            package.json
            readme.md
            webpack.mix.js
            **/.github
            **/.github/**
            **/.git/**
            **/.git/**
            **/.tests/**/*
            **/node_modules/**
